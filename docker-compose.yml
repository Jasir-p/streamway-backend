services:
  

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
      
        python manage.py collectstatic --noinput &&
        python manage.py migrate_schemas --shared &&
        python manage.py migrate_schemas --tenant &&
        daphne -b 0.0.0.0 -p 8000 streamway.asgi:application
      "
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - streamway-network

  db:
    image: postgres:16.1

    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - streamway-network

  redis:
    image: redis:7

    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - streamway-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
        echo 'Waiting for web service to complete migrations...' &&
        sleep 30 &&
        celery -A streamway worker --loglevel=info --pool=gevent
      "
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - streamway-network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
        echo 'Waiting for web service to complete migrations...' &&
        sleep 35 &&
        celery -A streamway beat --loglevel=info"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - streamway-network


  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    networks:
      - streamway-network

volumes:
  postgres_data:
  redis_data:

networks:
  streamway-network:
    driver: bridge